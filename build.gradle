buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'

version = "2.0.0-1.12.2-beta.5"
group = "org.mediamod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MediaMod"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'
        }
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

repositories {
    maven { url 'https://jitpack.io' }
    mavenCentral()
    // jcenter()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'

    embed("org.java-websocket:Java-WebSocket:1.5.1")
    embed("com.github.zafarkhaja:java-semver:0.9.0")
    embed("com.moandjiezana.toml:toml4j:0.7.2")
}

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title": "mediamod",
                "Specification-Vendor": "mediamodteam",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"mediamodteam",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar {
    dependsOn configurations.compile
    from {
        configurations.embed.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

moveResources.dependsOn processResources
classes.dependsOn moveResources
